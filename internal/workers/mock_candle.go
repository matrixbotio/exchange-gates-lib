// Code generated by MockGen. DO NOT EDIT.
// Source: candle.go
//
// Generated by this command:
//
//	mockgen -source=candle.go -destination=mock_candle.go -package=workers
//

// Package workers is a generated GoMock package.
package workers

import (
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
)

// MockUnsubscriber is a mock of Unsubscriber interface.
type MockUnsubscriber struct {
	ctrl     *gomock.Controller
	recorder *MockUnsubscriberMockRecorder
	isgomock struct{}
}

// MockUnsubscriberMockRecorder is the mock recorder for MockUnsubscriber.
type MockUnsubscriberMockRecorder struct {
	mock *MockUnsubscriber
}

// NewMockUnsubscriber creates a new mock instance.
func NewMockUnsubscriber(ctrl *gomock.Controller) *MockUnsubscriber {
	mock := &MockUnsubscriber{ctrl: ctrl}
	mock.recorder = &MockUnsubscriberMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockUnsubscriber) EXPECT() *MockUnsubscriberMockRecorder {
	return m.recorder
}

// Unsubscribe mocks base method.
func (m *MockUnsubscriber) Unsubscribe() error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Unsubscribe")
	ret0, _ := ret[0].(error)
	return ret0
}

// Unsubscribe indicates an expected call of Unsubscribe.
func (mr *MockUnsubscriberMockRecorder) Unsubscribe() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Unsubscribe", reflect.TypeOf((*MockUnsubscriber)(nil).Unsubscribe))
}
